<?php
/**
 * {{VENDOR_NAME}}
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade this module to newer
 * versions in the future. If you wish to customize this module for your
 * needs please contact {{VENDOR_NAME}} for more information.
 *
 * @copyright   Copyright (c) {{YEAR}} {{VENDOR_NAME}}
 * @author      {{VENDOR_NAME}}
 *
 */

declare(strict_types=1);

namespace {{VENDOR_NAME}}\{{MODULE_NAME}}\Plugin;

// Auto injection of relevant namespaces coming soon
use Magento\Framework\App\RequestInterface;
use Magento\Backend\Block\Widget\Button\Toolbar as ToolbarContext;
use Magento\Framework\View\Element\AbstractBlock;
use Magento\Backend\Block\Widget\Button\ButtonList;

/**
 * Class {{PLUGIN_CLASS_NAME}}
 *
 * Description of this class goes here
 *
 * @package {{VENDOR_NAME}}\{{MODULE_NAME}}\Plugin;
 */
class {{PLUGIN_CLASS_NAME}}
{
    /**
     * {{PLUGIN_CLASS_NAME}} constructor.
     *
     * @param \Magento\Framework\UrlInterface $urlBuilder
     * @param \Magento\Sales\Model\Order      $order
     * @param RequestInterface                $request
     */
    public function __construct(
        \Magento\Framework\UrlInterface $urlBuilder,
        \Magento\Sales\Model\Order $order,
        RequestInterface $request
    ) {
        $this->urlBuilder = $urlBuilder;
        $this->order      = $order;
        $this->request    = $request;
    }

    /**
     * @param ToolbarContext $toolbar
     * @param AbstractBlock  $context
     * @param ButtonList     $buttonList
     *
     * @return array
     */
    public function {{PLUGIN_METHOD_NAME}}(
        ToolbarContext $toolbar,
        \Magento\Framework\View\Element\AbstractBlock $context,
        \Magento\Backend\Block\Widget\Button\ButtonList $buttonList
    ) : array {

        return [$context, $buttonList];
    }
}
