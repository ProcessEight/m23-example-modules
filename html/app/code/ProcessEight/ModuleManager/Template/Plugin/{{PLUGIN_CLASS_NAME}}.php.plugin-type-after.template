<?php
/**
 * {{VENDOR_NAME}}
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade this module to newer
 * versions in the future. If you wish to customize this module for your
 * needs please contact {{VENDOR_NAME}} for more information.
 *
 * @copyright   Copyright (c) {{YEAR}} {{VENDOR_NAME}}
 * @author      {{VENDOR_NAME}}
 *
 */

declare(strict_types=1);

namespace {{VENDOR_NAME}}\{{MODULE_NAME}}\Plugin;

class {{PLUGIN_CLASS_NAME_UCFIRST}}
{
    /**
     * @var \Psr\Log\LoggerInterface
     */
    private $logger;

    /**
     * {{PLUGIN_CLASS_NAME_UCFIRST}} constructor.
     *
     * @param \Psr\Log\LoggerInterface  $logger
     */
    public function __construct(
        \Psr\Log\LoggerInterface $logger
    ) {
        $this->logger = $logger;
    }

    /**
     * Example of using a plugin to log the intercepted method parameters
     *
     * @param {{INTERCEPTED_CLASS_NAMESPACE}}    $subject The targeted class
     * @param                                    $result  Result of the targeted method
     * @param \Magento\Framework\DataObject      $request Parameter(s) of the targeted method
     */
    public function {{PLUGIN_TYPE}}{{INTERCEPTED_METHOD_NAME_UCFIRST}}(
        {{INTERCEPTED_CLASS_NAMESPACE}} $subject,   // The intercepted class
        $result,                                    // Result of the intercepted method
        \Magento\Framework\DataObject $request      // Parameter(s) of the intercepted method
    )
    {
        $this->logger->debug(__METHOD__ . ': Logging from the {{PLUGIN_TYPE}}{{INTERCEPTED_METHOD_NAME_UCFIRST}} plugin');

        return $result;
    }
}
